substitutions:
  name: ifan03
  friendly_name: ifan03

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  comment: Sonoff ifan03 powered fan
  name_add_mac_suffix: true
  project:
    name: ishioni.ifan03
    version: "2.2"

esp8266:
  board: esp01_1m
  early_pint_init: false

api:
captive_portal:
dashboard_import:
  package_import_url: github://ishioni/esphome/ifan03/ifan03-template.yaml@feat/ifan03-buzzer
logger:
ota:
  platform: esphome
web_server:
  port: 80
wifi:
  ap:

binary_sensor:
  - platform: status
    device_class: connectivity
    name: Status
    
  - platform: remote_receiver
    id: remote_buzzer
    raw:
      code: [-207, 104, -103, 104, -104, 103, -104, 207, -104, 103, -104, 103, -104, 104, -103, 104, -103, 104, -104, 107, -721, 105, -206, 207, -518, 105, -931, 104, -104, 103, -725, 104, -104, 103, -725, 104, -104, 103, -207, 104, -414]
    on_release:
      then:
        - switch.toggle: buzzer_dummy
        # - script.execute: beep

  - platform: remote_receiver
    id: remote_off
    raw:
      code: [-207, 104, -103, 104, -104, 103, -104, 207, -104, 103, -104, 104, -103, 104, -104, 103, -104, 105, -102, 104, -725, 104, -311, 103, -518, 104, -933, 103, -104, 104, -725, 104, -932, 104, -207, 207, -519]
    on_release:
      then:
        - fan.turn_off: ifan03_fan
        # - if: &beep
        #     condition:
        #       switch.is_on: buzzer_dummy
        #     then:
        #       - script.execute: beep

  - platform: remote_receiver
    id: remote_low
    raw:
      code: [-207, 104, -104, 103, -104, 104, -103, 207, -104, 104, -103, 104, -104, 103, -104, 104, -103, 104, -104, 103, -726, 103, -312, 103, -518, 104, -933, 103, -104, 104, -725, 104, -103, 104, -726, 103, -104, 311, -518]
    on_release:
      then:
        - fan.turn_on:
            id: ifan03_fan
            speed: 1
        # - if: *beep

  - platform: remote_receiver
    id: remote_medium
    raw:
      code: [-208, 103, -104, 104, -103, 104, -103, 208, -103, 104, -104, 103, -104, 104, -103, 104, -104, 103, -104, 103, -726, 104, -310, 104, -518, 104, -933, 103, -104, 104, -725, 104, -207, 104, -622, 103, -416, 102, -415]
    on_release:
      then:
        - fan.turn_on:
            id: ifan03_fan
            speed: 2
        # - if: *beep

  - platform: remote_receiver
    id: remote_high
    raw:
      code: [-207, 104, -104, 103, -104, 104, -103, 208, -103, 104, -104, 103, -104, 104, -103, 104, -104, 103, -104, 103, -726, 104, -311, 104, -518, 103, -934, 103, -103, 104, -726, 103, -104, 207, -622, 104, -103, 104, -207, 104, -415]
    on_release:
      then:
        - fan.turn_on:
            id: ifan03_fan
            speed: 3
        # - if: *beep

  - platform: remote_receiver
    id: remote_oscillate
    raw:
      code: [-207, 104, -103, 104, -104, 103, -104, 207, -104, 103, -104, 104, -103, 104, -103, 104, -104, 103, -104, 104, -725, 104, -311, 103, -518, 104, -933, 103, -104, 103, -726, 103, -311, 104, -518, 104, -207, 104, -103, 104, -414]
    on_release:
      then:
        - if:
            condition:
              fan.is_on: ifan03_fan
            then:
              - lambda: |-
                  auto call = id(ifan03_fan).turn_on();
                  if (id(ifan03_fan).oscillating ) {
                    call.set_oscillating(false);
                  } else {
                    call.set_oscillating(true);
                  }
                  call.perform();
        # - if: *beep

button:
  - platform: restart
    name: "Reboot"
  - platform: template
    name: "Beep 3 Times"
    on_press:
      then:
        - script.execute: 
            id: beep_buzzer
            num_beeps: 3

fan:
  - platform: speed
    output: fan_decode
    speed_count: 3
    oscillation_output: oscillation_out
    id: ifan03_fan
    icon: mdi:fan
    name: Fan
    on_turn_off:
      - lambda: !lambda |-
          if (id(ifan03_fan).oscillating) {
          auto call = id(ifan03_fan).turn_off();
          call.set_oscillating(false);
          call.perform();
          }

remote_receiver:
  pin: 
    number: GPIO3

script:
  - id: beep
    parameters:
      num_beeps: int
    mode: restart
    then:
      - repeat:
          count: !lambda 'return num_beeps;'
          then: 
            - output.turn_on: buzzer_out
            - delay: 50ms
            - output.turn_off: buzzer_out

sensor:
  - platform: wifi_signal
    id: wifi_signal_db
    update_interval: 10s
  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi signal"
    icon: mdi:wifi-strength-1
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""
  - platform: uptime
    name: Uptime
    entity_category: "diagnostic"
  - platform: adc
    pin: VCC
    name: "VCC Voltage"
    entity_category: "diagnostic"
    device_class: "voltage"

switch:
  - platform: template
    id: buzzer_dummy
    name: Buzzer
    icon: mdi:volume-medium
    optimistic: True
    entity_category: config
  - platform: gpio
    name: "GPIO 14 Relay"
    pin: GPIO14
    id: gpio14sw
    restore_mode: RESTORE_DEFAULT_OFF
    internal: true
  - platform: gpio
    name: "GPIO 12 Relay"
    pin: GPIO12
    id: gpio12sw
    restore_mode: RESTORE_DEFAULT_OFF
    internal: true
  - platform: gpio
    name: "GPIO 15 Relay"
    pin: GPIO15
    id: gpio15sw
    restore_mode: RESTORE_DEFAULT_OFF
    internal: true

time:
  - platform: homeassistant
    id: homeassistant_time

output:
  - platform: template
    type: float
    id: fan_decode
    write_action:
      - lambda: |-
          if (state < 0.25) {
            id(gpio14sw).turn_off();
            id(gpio12sw).turn_off();
            id(gpio15sw).turn_off();
          }
          else if (state < 0.5) {
            id(gpio14sw).turn_on();
            id(gpio12sw).turn_off();
            id(gpio15sw).turn_off();
          }
          else if (state < 0.75) {
            id(gpio14sw).turn_on();
            id(gpio12sw).turn_on();
            id(gpio15sw).turn_off();
          }
          else {
            id(gpio14sw).turn_on();
            id(gpio12sw).turn_off();
            id(gpio15sw).turn_on();
          }

  - platform: gpio
    pin: GPIO9
    id: oscillation_out
    inverted: true

  - platform: gpio
    pin: GPIO10
    id: buzzer_out
    inverted: true
    