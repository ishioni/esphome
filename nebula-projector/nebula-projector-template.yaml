# GPIO0 	LED outside case
# GPIO4 	Red
# GPIO5 	Laser
# GPIO12 	Green
# GPIO13 	Motor
# GPIO14 	Blue
# GPIO15 	LED outside case
# GPIO16 	Button

substitutions:
  name: nebula-projector
  friendly_name: Nebula projector

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  comment: ESP8266 Nebula projector
  name_add_mac_suffix: true
  project:
    name: ishioni.nebula_projector
    version: "2.2"

esp8266:
  board: esp12e
  early_pin_init: false
  restore_from_flash: false

api:

captive_portal:

dashboard_import:
  package_import_url: github://ishioni/esphome/nebula-projector/nebula-projector-template.yaml@feat/nebula-v2

logger:
  
ota:
  platform: esphome

web_server:
  port: 80
  include_internal: true

wifi:
  ap:

binary_sensor:
  - platform: status
    device_class: connectivity
    name: Status
  - platform: gpio
    pin: 
      number: GPIO16
      mode: INPUT_PULLDOWN_16
      inverted: true
    name: ${name} button
    on_press:
      then:
        - light.turn_on: 
            id: rgb_light
            brightness: 30%
        - light.turn_on: 
            id: laser
            brightness: 65%
        - delay : 1h
        - light.turn_off: 
            id: rgb_light
        - light.turn_off: 
            id: laser

button:
  - platform: restart
    name: Reboot

sensor:
  - platform: wifi_signal
    id: wifi_signal_db
    update_interval: 10s
  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi signal"
    icon: mdi:wifi-strength-1
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""
  - platform: uptime
    name: Uptime
    entity_category: "diagnostic"
  - platform: adc
    pin: VCC
    name: "VCC Voltage"
    entity_category: "diagnostic"
    device_class: "voltage"

light:
  - platform: status_led
    id: case_horizontal_led
    output: case_gpio
    effects:
      - strobe:
          name: Slow blink
          colors:
            - state: true
              brightness: 100%
              duration: 500ms
            - state: false
              duration: 500ms
      - strobe:
          name: Fast blink
          colors:
            - state: true
              brightness: 100%
              duration: 200ms
            - state: false
              duration: 200ms
  - platform: rgb
    name: Nebula light
    id: rgb_light
    icon: mdi:projector
    red: nebula_red
    green: nebula_green
    blue: nebula_blue
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - if:
          condition:
            - number.in_range:
                id: motor_speed
                above: 1
          then:
            - light.turn_on:
                id: motor
                brightness: !lambda |-
                  return (id(motor_speed).state / 10.0) + 0.2;
                transition_length: 0s
    on_turn_off:
      - light.turn_off:
          id: motor
  - platform: monochromatic
    name: Laser light
    id: laser
    icon: mdi:laser-pointer
    output: laser_pwm
    restore_mode: ALWAYS_OFF
  - platform: monochromatic
    name: Rotation
    id: motor
    output: motor_pwm
    restore_mode: ALWAYS_OFF
    internal: true
  # - platform: monochromatic
  #   name: ${name} bled
  #   id: bled
  #   output: bled_pwm
  #   restore_mode: ALWAYS_OFF
  #   internal: true
  # - platform: monochromatic
  #   name: ${name} rled
  #   id: rled
  #   output: rled_pwm
  #   restore_mode: ALWAYS_OFF
  #   internal: true

number:
  - platform: template
    id: motor_speed
    name: ${name} motor speed
    icon: mdi:cog-clockwise
    entity_category: config
    optimistic: true
    restore_value: true
    step: 1
    max_value: 6
    min_value: 0
    on_value:
      then:
      - if:
          condition:
            - number.in_range:
                id: motor_speed
                above: 1
            - light.is_on: rgb_light
          then:
            - light.turn_on:
                id: motor
                brightness: !lambda |-
                  return (id(motor_speed).state / 10.0) + 0.2;
                transition_length: 0s
          else:
            - light.turn_off:
                id: motor

output:
  - platform: esp8266_pwm
    id: nebula_red
    pin: GPIO4
    inverted: true
  - platform: esp8266_pwm
    id: nebula_green
    pin: GPIO12
    inverted: true
  - platform: esp8266_pwm
    id: nebula_blue
    pin: GPIO14
    inverted: true
  - platform: esp8266_pwm
    id: laser_pwm
    pin: GPIO5
    min_power: 0.45
    max_power: 0.8
    zero_means_zero: true
    # frequency: 2000 Hz
    inverted: true
  - platform: esp8266_pwm
    id: motor_pwm
    pin: GPIO13
    min_power: 0.15
  - platform: template
    id: case_gpio
    type: binary
    write_action:
      - if:
          condition:
            lambda: "return state;"
          then:
            - output.turn_on: case_horizontal_gpio
            - output.turn_on: case_vertical_gpio
          else:
            - output.turn_off: case_horizontal_gpio
            - output.turn_off: case_vertical_gpio
  - platform: gpio
    id: case_horizontal_gpio
    pin: GPIO0
    inverted: true
  - platform: gpio
    id: case_vertical_gpio
    pin: GPIO15
    inverted: true

